<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YvH/F1qvFqgOdWAAAAAASUVORK5CYII=
</value>
  </data>
</root>